"use strict";document.addEventListener("DOMContentLoaded",function(){var e=document.querySelector(".history"),t=document.querySelectorAll(".btn-loadmore"),n=document.querySelectorAll(".history__swiper-slide"),o=document.querySelector(".history__swiper-wrapper");function r(e,t){e.previousElementSibling.style.removeProperty("height"),n[t].style.removeProperty("height"),o.style.removeProperty("height"),e.classList.remove("active"),e.previousElementSibling.classList.remove("active"),e.textContent="Показать больше"}e.addEventListener("click",function(i){t.forEach(function(e,t){i.target===e&&!1===e.classList.contains("active")?(e.previousElementSibling.classList.add("active"),e.previousElementSibling.style.height=e.previousElementSibling.scrollHeight+"px",n[t].style.height=e.previousElementSibling.scrollHeight+300+"px",o.style.height=e.previousElementSibling.scrollHeight+300+"px",e.classList.add("active"),e.textContent="Скрыть"):i.target===e&&e.classList.contains("active")&&r(e,t)})});document.querySelectorAll(".swiper-slide");new Swiper(".swiper",{direction:"vertical",allowTouchMove:!1,mousewheel:!1,slidesPerView:1,pagination:{el:".swiper-pagination.horizontal",clickable:"true",renderBullet:function(e,t,i){var n=document.documentElement.scrollWidth;return n<800?'\n                    <button type="button" class="'.concat(t,' history__swiper-dot-btn">\n                       ').concat(2015-e," \n                    </button>\n                    "):800<n?'\n                    <button type="button" class="'.concat(t,' history__swiper-dot-btn">\n                       ').concat(2015-e," год\n                    </button>\n                    "):void 0}},breakpoints:{1100:{},800:{init:!0,direction:"vertical",pagination:{el:".swiper-pagination.vertical"}},499:{direction:"horizontal"},0:{direction:"horizontal"}}}).on("slideChange",function(){t.forEach(function(e,t){e.classList.contains("active")&&r(e,t)})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
